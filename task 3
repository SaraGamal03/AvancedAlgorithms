public class task3 {

    private int[] arr;
    private int RedTop;
    private int BlueTop;

    public task3(int capacity) {
        arr = new int[capacity];
        RedTop = -1;
        BlueTop = capacity;
    }

    public void redPush(int item) {
        if (RedTop + 1 == BlueTop) {
            throw new RuntimeException("Stack overflow");
        }
        arr[++RedTop] = item;
    }

    public void bluePush(int item) {
        if (BlueTop - 1 == RedTop) {
            throw new RuntimeException("Stack overflow");
        }
        arr[--BlueTop] = item;
    }

    public int redPop() {
        if (RedTop == -1) {
            throw new RuntimeException("Red stack underflow");
        }
        return arr[RedTop--];
    }

    public int bluePop() {
        if (BlueTop == arr.length) {
            throw new RuntimeException("Blue stack underflow");
        }
        return arr[BlueTop++];
    }

    public boolean isRedEmpty() {
        return RedTop == -1;
    }

    public boolean isBlueEmpty() {
        return BlueTop == arr.length;
    }

    public boolean isRedFull() {
        return RedTop + 1 == BlueTop;
    }

    public boolean isBlueFull() {
        return BlueTop - 1 == RedTop;
    }
    public static void main(String[] args) {
        task3 stack = new task3(10);
        stack.redPush(1);
        stack.bluePush(2);
        stack.redPush(3);
        stack.bluePush(4);
        System.out.println(stack.redPop()); 
        System.out.println(stack.bluePop()); 
    }
}

}
